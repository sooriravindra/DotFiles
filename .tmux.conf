# instructs tmux to expect UTF-8 sequences

# act like vim
setw -g mode-keys vi
# bind h select-pane -L
# bind j select-pane -D
# bind k select-pane -U
# bind l select-pane -R
# bind-key -r C-h select-pane -L
# bind-key -r C-l select-pane -R
# bind-key -r C-h select-window -t :-
# bind-key -r C-l select-window -t :+

# Seemless vim integration, Use ^h ^j ^k ^l to navigate in tmux & vim
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind \ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Style the status bar
set-window-option -g window-status-current-fg colour226
set-window-option -g window-status-current-bg colour235
set -g status-fg colour253
set -g status-bg colour235
set -g status-interval 2
set -g status-left '#[fg=colour254,bg=colour237] #S #[fg=colour253,bg=colour235] '
# Needs tilisu/ something similar
set -g status-right '#[fg=colour254,bg=colour237] %d-%h #[fg=colour233,bg=colour250] %H:%M '
set -g status-right-length 50
set -g status-left-length 20
setw -g window-status-current-attr none


# Count from 1
set -g base-index 1 

# Set prefix to `
unbind C-b
set-option -g prefix `
bind ` send-prefix

#Enable mouse scrolling and select
set -g mouse on

# Toggle mouse state with prefix +  m
bind m run "if [[ `tmux show-option -w | grep mode-mouse.*on` ]]; then toggle=off; else toggle=on; fi; tmux display-message \"mouse tmux: \$toggle\"; tmux set-option -w mode-mouse \$toggle &> /dev/null; for cmd in mouse-select-pane mouse-resize-pane mouse-select-window; do tmux set-option -g \$cmd \$toggle &> /dev/null; done;"

# Switch to prev window
bind-key - last-window

# Prefix-R renumbers the windows again
# Use when many windows are closed and numbers are messed up
bind R                                      \
    set -g renumber-windows on\;            \
    new-window\; kill-window\;              \
    set -g renumber-windows off\;           \
    display-message "Windows reordered..."

